/// <reference types="node" />
import EventEmitter from 'events';
import { type ClearOutput, type DbClose, type DbQuery, type DeleteManyOutput, type DeleteOutput, type DisconnectOutput, type GetManyOutput, type GetOutput, type HasOutput, type IteratorOutput, type KeyvSqliteOptions, type SetOutput } from './types';
declare class KeyvSqlite<Value = any> extends EventEmitter {
    ttlSupport: boolean;
    opts: KeyvSqliteOptions;
    namespace?: string;
    close: DbClose;
    query: DbQuery;
    constructor(keyvOptions?: KeyvSqliteOptions | string);
    get(key: string): GetOutput<Value>;
    getMany(keys: string[]): GetManyOutput<Value>;
    set(key: string, value: Value): SetOutput;
    delete(key: string): DeleteOutput;
    deleteMany(keys: string[]): DeleteManyOutput;
    clear(): ClearOutput;
    iterator(namespace?: string): IteratorOutput;
    has(key: string): HasOutput;
    disconnect(): DisconnectOutput;
}
export = KeyvSqlite;
